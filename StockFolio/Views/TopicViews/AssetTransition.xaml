<UserControl x:Class="StockFolio.Views.AssetTransition"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:StockFolio.Views"
             xmlns:vm="clr-namespace:StockFolio.ViewModels"
             xmlns:mah="http://metro.mahapps.com/winfx/xaml/controls"
             xmlns:iconPacks="http://metro.mahapps.com/winfx/xaml/iconpacks"
             xmlns:sys="clr-namespace:System;assembly=mscorlib"
             xmlns:prism="http://prismlibrary.com/"
             xmlns:viewmodels="clr-namespace:StockFolio.ViewModels"
             xmlns:lvc="clr-namespace:LiveChartsCore.SkiaSharpView.WPF;assembly=LiveChartsCore.SkiaSharpView.WPF" 
             xmlns:i="http://schemas.microsoft.com/xaml/behaviors"
             prism:ViewModelLocator.AutoWireViewModel="True"
             mc:Ignorable="d" 
             d:DesignHeight="450" d:DesignWidth="1000">
    <Grid>
        <Grid.Resources>
            <ObjectDataProvider x:Key="DivideKeys" MethodName="GetValues" ObjectType="{x:Type sys:Enum}">
                <ObjectDataProvider.MethodParameters>
                    <x:Type TypeName="vm:DividePattern"/>
                </ObjectDataProvider.MethodParameters>
            </ObjectDataProvider>
            <local:DividePatternToStringConerter x:Key="DivideToString"/>
            <local:PeriodToRadioButtonConverter x:Key="PeriodToRadio"/>
        </Grid.Resources>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="auto"/>
            <ColumnDefinition Width="auto"/>
            <ColumnDefinition Width="*"/>
        </Grid.ColumnDefinitions>
        <Expander x:Name="ParamsTab" Grid.Column="0" IsExpanded="True" ExpandDirection="Right" Margin="0" mah:ControlsHelper.ContentCharacterCasing="Normal" >
            <Expander.Header>
                <TextBlock Text="Setting &amp; Parameter" TextAlignment="Right" Background="{Binding Background, ElementName=expander}">
                    <TextBlock.LayoutTransform>
                        <RotateTransform Angle="270"/>
                    </TextBlock.LayoutTransform>
                </TextBlock>
            </Expander.Header>
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="auto"/>
                    <ColumnDefinition Width="auto"/>
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                    <RowDefinition Height="auto"/>
                    <RowDefinition Height="*"/>
                </Grid.RowDefinitions>
                <Expander Grid.Row="0" Grid.ColumnSpan="2" Header="Params" mah:ControlsHelper.ContentCharacterCasing="Normal" Margin="0,0,0,5" IsExpanded="True">
                    <!--以下のElementでDataContext=Paramsとする -->
                    <StackPanel Orientation="Vertical"  DataContext="{Binding Params}">
                        <DockPanel>
                            <TextBlock DockPanel.Dock="Top" Text="分割レベル : " VerticalAlignment="Center" HorizontalAlignment="Left"/>
                            <mah:NumericUpDown DockPanel.Dock="Right" Value="{Binding Level,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}" Interval="1" HorizontalAlignment="Right"/>
                        </DockPanel>
                        <DockPanel>
                            <TextBlock DockPanel.Dock="Top" Text="分割タイプ : " VerticalAlignment="Center" HorizontalAlignment="Left"/>
                            <ComboBox ItemsSource="{Binding Source={StaticResource DivideKeys}}" SelectedValue="{Binding Divide.Value}" HorizontalAlignment="Right">
                                <ComboBox.ItemTemplate>
                                    <DataTemplate>
                                        <TextBlock Text="{Binding Converter={StaticResource DivideToString}}"/>
                                    </DataTemplate>
                                </ComboBox.ItemTemplate>
                            </ComboBox>
                        </DockPanel>
                        <DockPanel>
                            <TextBlock DockPanel.Dock="Top" Text="期間 : " VerticalAlignment="Center" HorizontalAlignment="Left"/>
                            <StackPanel HorizontalAlignment="Right" Orientation="Horizontal">
                                <StackPanel.Resources>
                                    <Thickness x:Key="RadioMargin">2 1 1 1</Thickness>
                                </StackPanel.Resources>
                                <RadioButton GroupName="Period" Content="  週  " IsChecked="{Binding TimePeriod.Value, ConverterParameter=Weekly,Converter={StaticResource PeriodToRadio}}" Margin="{StaticResource RadioMargin}" Style="{DynamicResource MahApps.Styles.ToggleButton.Flat}"/>
                                <RadioButton GroupName="Period" Content="  月  " IsChecked="{Binding TimePeriod.Value, ConverterParameter=Monthly,Converter={StaticResource PeriodToRadio}}" Margin="{StaticResource RadioMargin}" Style="{DynamicResource MahApps.Styles.ToggleButton.Flat}"/>
                                <RadioButton GroupName="Period" Content="四半期" IsChecked="{Binding TimePeriod.Value, ConverterParameter=Quarterly,Converter={StaticResource PeriodToRadio}}" Margin="{StaticResource RadioMargin}" Style="{DynamicResource MahApps.Styles.ToggleButton.Flat}"/>
                                <RadioButton GroupName="Period" Content="  年  " IsChecked="{Binding TimePeriod.Value, ConverterParameter=Yearly,Converter={StaticResource PeriodToRadio}}" Margin="{StaticResource RadioMargin}" Style="{DynamicResource MahApps.Styles.ToggleButton.Flat}"/>
                            </StackPanel>
                        </DockPanel>
                    </StackPanel>
                </Expander>
                <GroupBox Grid.Row="1" Grid.Column="0" Margin="0,0,2.5,0" Header="Date" mah:ControlsHelper.ContentCharacterCasing="Normal">
                    <TreeView ItemsSource="{Binding DateTree.Children}" Style="{mah:StaticResource MahApps.Styles.TreeView.Virtualized}">
                        <TreeView.ItemContainerStyle>
                            <Style TargetType="{x:Type TreeViewItem}" BasedOn="{StaticResource MahApps.Styles.TreeViewItem}">
                                <Setter Property="IsSelected" Value="{Binding IsSelected.Value,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}"/>
                                <Setter Property="IsExpanded" Value="{Binding IsExpand.Value,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}"/>
                                <Setter Property="FontWeight" Value="Normal" />
                                <Style.Triggers>
                                    <Trigger Property="IsSelected" Value="True">
                                        <Setter Property="FontWeight" Value="Bold" />
                                    </Trigger>
                                </Style.Triggers>
                            </Style>
                        </TreeView.ItemContainerStyle>
                        <TreeView.ItemTemplate>
                            <HierarchicalDataTemplate DataType="model:DateTree" ItemsSource="{Binding Children}">
                                <TextBlock Text="{Binding NumberDsp.Value,UpdateSourceTrigger=PropertyChanged}" />
                            </HierarchicalDataTemplate>
                        </TreeView.ItemTemplate>
                    </TreeView>
                </GroupBox>
                <GroupBox Grid.Row="1" Grid.Column="1" Margin="2.5,0,0,0" Header="Location" mah:ControlsHelper.ContentCharacterCasing="Normal">
                    <TreeView ItemsSource="{Binding LocationTree.Children}" Style="{StaticResource MahApps.Styles.TreeView.Virtualized}">
                        <TreeView.ItemContainerStyle>
                            <Style TargetType="{x:Type TreeViewItem}" BasedOn="{StaticResource MahApps.Styles.TreeViewItem}">
                                <Setter Property="IsSelected" Value="{Binding IsSelected.Value,Mode=TwoWay}"/>
                                <Setter Property="IsExpanded" Value="{Binding IsExpand.Value,Mode=TwoWay}"/>
                                <Setter Property="FontWeight" Value="Normal" />
                                <Style.Triggers>
                                    <Trigger Property="IsSelected" Value="True">
                                        <Setter Property="FontWeight" Value="Bold" />
                                    </Trigger>
                                </Style.Triggers>
                            </Style>
                        </TreeView.ItemContainerStyle>
                        <TreeView.ItemTemplate>
                            <HierarchicalDataTemplate DataType="model:LocationNode" ItemsSource="{Binding Children}">
                                <TextBlock Text="{Binding Name,UpdateSourceTrigger=PropertyChanged}"/>
                            </HierarchicalDataTemplate>
                        </TreeView.ItemTemplate>
                    </TreeView>
                </GroupBox>
            </Grid>
        </Expander>
        <Expander x:Name="BrakeDownExp" Grid.Column="1" IsExpanded="True" ExpandDirection="Right" Margin="0" mah:ControlsHelper.ContentCharacterCasing="Normal">
            <Expander.Header>
                <TextBlock Text="内訳" TextAlignment="Right" Background="{Binding Background, ElementName=expander}">
                    <TextBlock.LayoutTransform>
                        <RotateTransform Angle="270"/>
                    </TextBlock.LayoutTransform>
                </TextBlock>
            </Expander.Header>
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition Height="auto"/>
                    <RowDefinition Height="auto"/>
                    <RowDefinition Height="auto"/>
                    <RowDefinition Height="*"/>
                </Grid.RowDefinitions>
                <DockPanel Grid.Row="0" Margin="0,0,0,54" Grid.RowSpan="2">
                    <StackPanel Orientation="Vertical" DockPanel.Dock="Left">
                        <TextBlock Text="{Binding DateTree.CurrentDate,StringFormat=yyyy/M/d}"/>
                        <TextBlock Text="{Binding LocationTree.CurrentPath}"/>
                    </StackPanel>
                </DockPanel>
                <lvc:PieChart Grid.Row="1" InitialRotation="-90" x:Name="Pie" Panel.ZIndex="1"
                              Series="{Binding BrakeDownPie.Series}"
                              TooltipBackgroundPaint="{Binding BrakeDownPie.TooltipBackgroundPaint}"
                              TooltipTextPaint="{Binding BrakeDownPie.TooltipTextPaint}"
                              MinHeight="200" MinWidth="200" Width="300" Height="300" HorizontalAlignment="Center" VerticalAlignment="Center" Grid.RowSpan="2"/>

                <lvc:PieChart Grid.Row="1" InitialRotation="-90" x:Name="InnerPie" Panel.ZIndex="{Binding BrakeDownInnerPie.ZIndex.Value}"
                              Series="{Binding BrakeDownInnerPie.Series}"
                              TooltipBackgroundPaint="{Binding BrakeDownInnerPie.TooltipBackgroundPaint}"
                              TooltipTextPaint="{Binding BrakeDownInnerPie.TooltipTextPaint}"
                              MinHeight="100" MinWidth="100" Width="160" Height="160" HorizontalAlignment="Center" VerticalAlignment="Center" Grid.RowSpan="2">
                            
                </lvc:PieChart>
                <ScrollViewer VerticalScrollBarVisibility="auto" Grid.Row="3" Margin="0,10,0,0">
                    <ItemsControl ItemsSource="{Binding BrakeDownPie.Legend}">
                        <ItemsControl.ItemsPanel>
                            <ItemsPanelTemplate>
                                <WrapPanel Orientation="Horizontal" Width="{Binding Width,ElementName=Pie}"/>
                            </ItemsPanelTemplate>
                        </ItemsControl.ItemsPanel>
                        <ItemsControl.ItemTemplate>
                            <DataTemplate>
                                <Grid Margin="3">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="auto"/>
                                        <ColumnDefinition Width="auto"/>
                                        <ColumnDefinition Width="auto"/>
                                    </Grid.ColumnDefinitions>
                                    <!--<iconPacks:PackIconEvaIcons Kind="PieChart2" Grid.Column="0" Width="15" Height="15" Foreground="{Binding Fill}"/>-->
                                    <!--<iconPacks:PackIconIonicons Kind="RadioButtonOniOS"  Grid.Column="0" Width="15" Height="15" Foreground="{Binding Fill}"/>-->
                                    <iconPacks:PackIconBoxIcons Kind="SolidCircle" Grid.Column="0" Width="14" Height="14" Foreground="{Binding Fill}"/>
                                    <TextBlock Grid.Column="1" Text="{Binding Name}"/>
                                    <TextBlock Grid.Column="2" Text="{Binding Rate,StringFormat={}({0:P1})}"/>
                                </Grid>
                            </DataTemplate>
                        </ItemsControl.ItemTemplate>
                    </ItemsControl>
                    <!-- 第二分割要素のLegendも追加予定 -->
                </ScrollViewer>
            </Grid>
        </Expander>
        <local:GraphStack Grid.Column="2" DataContext="{Binding}"/>
    </Grid>
</UserControl>
